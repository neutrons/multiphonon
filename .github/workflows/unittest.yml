name: Modern-CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [next, qa, main]
    tags: ['v*']

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          cache-environment-key: ${{ runner.os }}-env-${{ hashFiles('**/environment.yml') }}
          cache-downloads-key: ${{ runner.os }}-downloads-${{ hashFiles('**/environment.yml') }}
          condarc: |
            channels:
              - conda-forge
              - mcvine
              - mantid
      - name: install multiphonon
        run: |
              python -m pip install -e .
      - name: run unit tests
        run: |
          echo "running unit tests"
          python -m pytest -vv --cov=src --cov-report=xml  --cov-report=term-missing tests/
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
  python-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          cache-environment-key: ${{ runner.os }}-env-${{ hashFiles('**/environment.yml') }}
          cache-downloads-key: ${{ runner.os }}-downloads-${{ hashFiles('**/environment.yml') }}
          condarc: |
            channels:
              - conda-forge
              - mcvine
              - mantid
      - name: Build python wheel
        shell: bash -l {0}
        run: |
          python -m build --wheel --no-isolation
          check-wheel-contents dist/multiphonon-*.whl
      - name: Upload python wheel
        uses: actions/upload-artifact@v4
        with:
          name: multiphonon_wheel
          path: dist/multiphonon-*.whl
  conda-build:
    needs: python-build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: conda_environment.yml
          cache-environment-key: ${{ runner.os }}-env-${{ hashFiles('**/conda_environment.yml') }}
          cache-downloads-key: ${{ runner.os }}-downloads-${{ hashFiles('**/conda_environment.yml') }}
          condarc: |
            channels:
              - conda-forge
      # - name: Mkdir dist
      #   shell: bash -l {0}
      #   run: |
      #     # set up environment
      #     mkdir dist
      - name: Download python wheel from python-build
        uses: actions/download-artifact@v4
        with:
          name: multiphonon_wheel
          path: dist
      - shell: bash -l {0}
        run: |
          # show files
          ls -la
      - name: build conda package
        shell: bash -l {0}
        run: |
          # enter conda
          cd conda.recipe
          echo "versioningit $(versioningit ../)"
          # build the package
          VERSION=$(versioningit ../) conda mambabuild --output-folder . .
          conda verify noarch/multiphonon*.tar.bz2
      - name: upload conda package to anaconda
        shell: bash -l {0}
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          IS_RC: ${{ contains(github.ref, 'rc') }}
        run: |
          # label is main or rc depending on the tag-name
          CONDA_LABEL="main"
          if [ "${IS_RC}" = "true" ]; then CONDA_LABEL="rc"; fi
          echo pushing ${{ github.ref }} with label $CONDA_LABEL
          anaconda upload --label $CONDA_LABEL conda.recipe/noarch/multiphonon*.tar.bz2
